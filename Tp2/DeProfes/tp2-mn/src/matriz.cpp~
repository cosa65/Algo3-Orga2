#include "m
#include <vector>
#include <iostream>

using namespace std;

typedef vector<double> fila;

//generador basico, no se usa
Matriz();

//~Matriz();

//generador que te crea una matriz de un tama√±o, no pide vectores

Matriz( int Cfilas, int Ccolumnas){
	_Cfilas = Cfilas;
	_Ccolumnas = Ccolumnas;
	_inicioFilas.resize(Cfilas);
	for (int i = 0; i<_Cfilas; i++){_inicioFilas[i]=1;}
}

void Definir(double adefinir, int fila, int columna) {

	int size = _valores.size()+1;

	_valores.resize(size);
	_posValores.resize(size);

	for (int i=fila;i<_Cfilas;i++) {
		_inicioFila[i]++;
	}

	int i =	_posValores[_inicioFilas[fila-1]-1];
	int j =	_posValores[_inicioFilas[fila]-1];
	int lugar;
	for (int k=i;k<j;k++) {
		if (_posValores[k]>columna) {
			lugar=k;	
		}
	} 

	int posTemp = _posValores[lugar];
	double temp = _valores[lugar];

	for (int k=lugar;k<Cfilas;k++) {
		posTemp = _posValores[k+1];
		temp = _valores[k+1];
		_valores[k+1]=temp;
		_posValores[k+1]=posTemp;		
	}
}


double Posicion(int fila, int columna) {

	int i =	_posValores[_inicioFilas[fila-1]-1];

	int j =	_posValores[_inicioFilas[fila]-1];

	for (int k=i;k<j;k++) {
		if (_posValores[k]==columna) {
			return _valores[k];
		}
	} return 0;
}

void mostrar();

private:

vector <double> _valores;

vector <int> _posValores;

vector <int> _inicioFilas;

int _Cfilas;

int _Ccolumnas;

};
